spring.application.name=apigateway
server.port=8080
spring.main.allow-bean-definition-overriding=true
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true

spring.cloud.gateway.server.webflux.routes[0].id=user-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://user-service
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/users/**,/user-service/**  # Include all user-service paths
spring.cloud.gateway.server.webflux.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.server.webflux.routes[0].filters[0].args.name=userCircuitBreaker
spring.cloud.gateway.server.webflux.routes[0].filters[0].args.fallbackUri=forward:/fallback

spring.cloud.gateway.server.webflux.routes[1].id=product-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://product-service
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/products/**,/product-service/**  # Include all product-service paths, including v3/api-docs
spring.cloud.gateway.server.webflux.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.server.webflux.routes[1].filters[0].args.name=productCircuitBreaker
spring.cloud.gateway.server.webflux.routes[1].filters[0].args.fallbackUri=forward:/fallback

spring.cloud.gateway.server.webflux.routes[2].id=order-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://order-service
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/orders/**,/order-service/**  # Include all order-service paths
spring.cloud.gateway.server.webflux.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.server.webflux.routes[2].filters[0].args.name=orderCircuitBreaker
spring.cloud.gateway.server.webflux.routes[2].filters[0].args.fallbackUri=forward:/fallback


resilience4j.circuitbreaker.instances.userCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.productCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.productCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.orderCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.orderCircuitBreaker.slidingWindowSize=10

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.ip-address=${spring.cloud.client.ip-address}
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=localhost:${server.port}
 
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.cloud.commons.util.InetUtils=TRACE

# Enable Swagger UI in gateway
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui/index.html
springdoc.swagger-ui.groups-order=ASC

springdoc.swagger-ui.urls[0].name=User Service
springdoc.swagger-ui.urls[0].url=/user-service/swagger-ui/index.html
springdoc.swagger-ui.urls[1].name=Product Service
springdoc.swagger-ui.urls[1].url=/product-service/swagger-ui/index.html
springdoc.swagger-ui.urls[2].name=Order Service
springdoc.swagger-ui.urls[2].url=/order-service/swagger-ui/index.html